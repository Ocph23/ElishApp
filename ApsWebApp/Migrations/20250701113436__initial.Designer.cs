// <auto-generated />
using System;
using ApsWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApsWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701113436__initial")]
    partial class _initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShareModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ShareModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("KaryawanId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("NPWP")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Telepon")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KaryawanId");

                    b.HasIndex("UserId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ShareModels.Gudang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Gudang");
                });

            modelBuilder.Entity("ShareModels.IncomingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ActualValue")
                        .HasColumnType("double precision");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int?>("PembelianId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PembelianId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("IncomingItem");
                });

            modelBuilder.Entity("ShareModels.Karyawan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Telepon")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Karyawan");
                });

            modelBuilder.Entity("ShareModels.Merk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Merk");
                });

            modelBuilder.Entity("ShareModels.OrderPembelian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discription")
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("OrderPembelian");
                });

            modelBuilder.Entity("ShareModels.OrderPembelianItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<string>("Keterangan")
                        .HasColumnType("text");

                    b.Property<int?>("OrderPembelianId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quntity")
                        .HasColumnType("double precision");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderPembelianId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("OrderPembelianItem");
                });

            modelBuilder.Entity("ShareModels.OrderPenjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<double>("DeadLine")
                        .HasColumnType("double precision");

                    b.Property<string>("Discription")
                        .HasColumnType("text");

                    b.Property<int?>("GudangId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SalesId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GudangId");

                    b.HasIndex("SalesId");

                    b.ToTable("OrderPenjualan");
                });

            modelBuilder.Entity("ShareModels.OrderPenjualanItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int?>("OrderPenjualanId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderPenjualanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("OrderPenjualanItem");
                });

            modelBuilder.Entity("ShareModels.PembayaranPembelian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PayTo")
                        .HasColumnType("text");

                    b.Property<int>("PayType")
                        .HasColumnType("integer");

                    b.Property<double>("PayValue")
                        .HasColumnType("double precision");

                    b.Property<int?>("PembelianId")
                        .HasColumnType("integer");

                    b.Property<string>("RekNumber")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PembelianId");

                    b.ToTable("PembayaranPembelian");
                });

            modelBuilder.Entity("ShareModels.PembayaranPenjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PayTo")
                        .HasColumnType("text");

                    b.Property<int>("PayType")
                        .HasColumnType("integer");

                    b.Property<double>("PayValue")
                        .HasColumnType("double precision");

                    b.Property<int?>("PenjualanId")
                        .HasColumnType("integer");

                    b.Property<string>("RekNumber")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PenjualanId");

                    b.ToTable("PembayaranPenjualan");
                });

            modelBuilder.Entity("ShareModels.Pembelian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeadLine")
                        .HasColumnType("integer");

                    b.Property<int?>("GudangId")
                        .HasColumnType("integer");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<int>("OrderPembelianId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GudangId");

                    b.HasIndex("OrderPembelianId")
                        .IsUnique();

                    b.ToTable("Pembelian");
                });

            modelBuilder.Entity("ShareModels.PembelianItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int?>("PembelianId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PembelianId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("PembelianItem");
                });

            modelBuilder.Entity("ShareModels.Pemindahan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DariId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("TujuanId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WaktuPemindahan")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DariId");

                    b.HasIndex("TujuanId");

                    b.ToTable("Pemindahan");
                });

            modelBuilder.Entity("ShareModels.PemindahanItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PemindahanId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PemindahanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("PemindahanItem");
                });

            modelBuilder.Entity("ShareModels.PengembalianPenjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("GudangId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GudangId");

                    b.ToTable("PengembalianPenjualan");
                });

            modelBuilder.Entity("ShareModels.PengembalianPenjualanItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int?>("PengembalianPenjualanId")
                        .HasColumnType("integer");

                    b.Property<int?>("PenjualanId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PengembalianPenjualanId");

                    b.HasIndex("PenjualanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("PengembalianPenjualanItem");
                });

            modelBuilder.Entity("ShareModels.Penjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Activity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<double>("DeadLine")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("Expedisi")
                        .HasColumnType("double precision");

                    b.Property<double>("FeeSalesman")
                        .HasColumnType("double precision");

                    b.Property<int?>("GudangId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderPenjualanId")
                        .HasColumnType("integer");

                    b.Property<int?>("SalesmanId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GudangId");

                    b.HasIndex("OrderPenjualanId");

                    b.HasIndex("SalesmanId");

                    b.ToTable("Penjualan");
                });

            modelBuilder.Entity("ShareModels.Penjualanitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int?>("PenjualanId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PenjualanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("Penjualanitem");
                });

            modelBuilder.Entity("ShareModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CodeArticle")
                        .HasColumnType("text");

                    b.Property<string>("CodeName")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int?>("MerkId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MerkId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ShareModels.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<int>("FileType")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Thumb")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("ShareModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ShareModels.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GudangId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("GudangId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("ShareModels.StockMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GudangId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int>("ReferenceId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferenceType")
                        .HasColumnType("integer");

                    b.Property<int>("StockMovementType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GudangId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockMovementType", "ReferenceType", "ReferenceId");

                    b.ToTable("StockMovements");
                });

            modelBuilder.Entity("ShareModels.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("text");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("NPWP")
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .HasColumnType("text");

                    b.Property<string>("Telepon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("ShareModels.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Buy")
                        .HasColumnType("double precision");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<double>("Sell")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("ShareModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activated")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ShareModels.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Userrole");
                });

            modelBuilder.Entity("ShareModels.Customer", b =>
                {
                    b.HasOne("ShareModels.Karyawan", "Karyawan")
                        .WithMany()
                        .HasForeignKey("KaryawanId");

                    b.HasOne("ShareModels.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId");

                    b.Navigation("Karyawan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShareModels.IncomingItem", b =>
                {
                    b.HasOne("ShareModels.Pembelian", "Pembelian")
                        .WithMany("Incomingitem")
                        .HasForeignKey("PembelianId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Pembelian");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.Karyawan", b =>
                {
                    b.HasOne("ShareModels.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShareModels.OrderPembelian", b =>
                {
                    b.HasOne("ShareModels.Supplier", "Supplier")
                        .WithMany("Orderpembelian")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShareModels.OrderPembelianItem", b =>
                {
                    b.HasOne("ShareModels.OrderPembelian", "OrderPembelian")
                        .WithMany("Items")
                        .HasForeignKey("OrderPembelianId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("OrderPembelian");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.OrderPenjualan", b =>
                {
                    b.HasOne("ShareModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId");

                    b.HasOne("ShareModels.Karyawan", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("Customer");

                    b.Navigation("Gudang");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ShareModels.OrderPenjualanItem", b =>
                {
                    b.HasOne("ShareModels.OrderPenjualan", "OrderPenjualan")
                        .WithMany("Items")
                        .HasForeignKey("OrderPenjualanId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("OrderPenjualan");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.PembayaranPembelian", b =>
                {
                    b.HasOne("ShareModels.Pembelian", "Pembelian")
                        .WithMany("PembayaranPembelian")
                        .HasForeignKey("PembelianId");

                    b.Navigation("Pembelian");
                });

            modelBuilder.Entity("ShareModels.PembayaranPenjualan", b =>
                {
                    b.HasOne("ShareModels.Penjualan", "Penjualan")
                        .WithMany("PembayaranPenjualan")
                        .HasForeignKey("PenjualanId");

                    b.Navigation("Penjualan");
                });

            modelBuilder.Entity("ShareModels.Pembelian", b =>
                {
                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId");

                    b.HasOne("ShareModels.OrderPembelian", "OrderPembelian")
                        .WithOne("Pembelian")
                        .HasForeignKey("ShareModels.Pembelian", "OrderPembelianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gudang");

                    b.Navigation("OrderPembelian");
                });

            modelBuilder.Entity("ShareModels.PembelianItem", b =>
                {
                    b.HasOne("ShareModels.Pembelian", null)
                        .WithMany("Items")
                        .HasForeignKey("PembelianId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.Pemindahan", b =>
                {
                    b.HasOne("ShareModels.Gudang", "Dari")
                        .WithMany()
                        .HasForeignKey("DariId");

                    b.HasOne("ShareModels.Gudang", "Tujuan")
                        .WithMany()
                        .HasForeignKey("TujuanId");

                    b.Navigation("Dari");

                    b.Navigation("Tujuan");
                });

            modelBuilder.Entity("ShareModels.PemindahanItem", b =>
                {
                    b.HasOne("ShareModels.Pemindahan", "Pemindahan")
                        .WithMany("Items")
                        .HasForeignKey("PemindahanId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Pemindahan");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.PengembalianPenjualan", b =>
                {
                    b.HasOne("ShareModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId");

                    b.Navigation("Customer");

                    b.Navigation("Gudang");
                });

            modelBuilder.Entity("ShareModels.PengembalianPenjualanItem", b =>
                {
                    b.HasOne("ShareModels.PengembalianPenjualan", null)
                        .WithMany("Items")
                        .HasForeignKey("PengembalianPenjualanId");

                    b.HasOne("ShareModels.Penjualan", "Penjualan")
                        .WithMany()
                        .HasForeignKey("PenjualanId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Penjualan");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.Penjualan", b =>
                {
                    b.HasOne("ShareModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId");

                    b.HasOne("ShareModels.OrderPenjualan", "OrderPenjualan")
                        .WithMany()
                        .HasForeignKey("OrderPenjualanId");

                    b.HasOne("ShareModels.Karyawan", "Salesman")
                        .WithMany()
                        .HasForeignKey("SalesmanId");

                    b.Navigation("Customer");

                    b.Navigation("Gudang");

                    b.Navigation("OrderPenjualan");

                    b.Navigation("Salesman");
                });

            modelBuilder.Entity("ShareModels.Penjualanitem", b =>
                {
                    b.HasOne("ShareModels.Penjualan", "Penjualan")
                        .WithMany("Items")
                        .HasForeignKey("PenjualanId");

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShareModels.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Penjualan");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShareModels.Product", b =>
                {
                    b.HasOne("ShareModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("ShareModels.Merk", "Merk")
                        .WithMany()
                        .HasForeignKey("MerkId");

                    b.HasOne("ShareModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Merk");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShareModels.ProductImage", b =>
                {
                    b.HasOne("ShareModels.Product", null)
                        .WithMany("ProductImage")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShareModels.Stock", b =>
                {
                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gudang");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShareModels.StockMovement", b =>
                {
                    b.HasOne("ShareModels.Gudang", "Gudang")
                        .WithMany()
                        .HasForeignKey("GudangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gudang");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShareModels.Unit", b =>
                {
                    b.HasOne("ShareModels.Product", null)
                        .WithMany("Units")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ShareModels.UserRole", b =>
                {
                    b.HasOne("ShareModels.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("ShareModels.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShareModels.OrderPembelian", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Pembelian");
                });

            modelBuilder.Entity("ShareModels.OrderPenjualan", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShareModels.Pembelian", b =>
                {
                    b.Navigation("Incomingitem");

                    b.Navigation("Items");

                    b.Navigation("PembayaranPembelian");
                });

            modelBuilder.Entity("ShareModels.Pemindahan", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShareModels.PengembalianPenjualan", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShareModels.Penjualan", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PembayaranPenjualan");
                });

            modelBuilder.Entity("ShareModels.Product", b =>
                {
                    b.Navigation("ProductImage");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("ShareModels.Supplier", b =>
                {
                    b.Navigation("Orderpembelian");
                });

            modelBuilder.Entity("ShareModels.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Roles");

                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
