@inject IUserStateService userServiceState

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">

    <RadzenPanelMenu>

        @foreach (var menu in Menus)
        {
            if (menu.Path == "logout")
            {
                <RadzenButton Style="width:100%" ButtonStyle="ButtonStyle.Danger" Icon="logout" Click="@LogoutAction" Text="Logout"></RadzenButton>
            }
            else
            {
                <RadzenPanelMenuItem Text="@(!IsWidth?"":menu.Text)" Icon="@menu.Icon" Path="@menu.Path">
                    @if (menu.Children != null)
                    {
                        @foreach (var menu1 in menu.Children)
                        {

                            <RadzenPanelMenuItem Style="margin-left:0px" Text="@(!IsWidth?"":menu1.Text)" Icon="@menu1.Icon" Path="@menu1.Path"></RadzenPanelMenuItem>
                        }
                    }
                </RadzenPanelMenuItem>
            }

        }







    </RadzenPanelMenu>

</div>

@code {

    [ParameterAttribute]
    public EventCallback<int> OnChange { get; set; }


    [ParameterAttribute]
    public bool IsWidth { get; set; } = true;

    private bool collapseNavMenu = true;


    string title => collapseNavMenu && !IsWidth ? "" : "APS";

    private string NavMenuCssClass => GetMenuClass();

    List<MenuItem> Menus = new List<MenuItem>();

    private void LogoutAction()
    {
        userServiceState.Logout();
    }


    public NavMenu()
    {
        Menus = new List<MenuItem>(){
        new MenuItem(){ Icon="home", Path="/", Text="Master" , Children =
                new List<MenuItem>{
                    new MenuItem(){ Icon="category", Path="category", Text="Kategori" },
                    new MenuItem(){ Icon="collections_bookmark", Path="merk", Text="Merek" },
                    new MenuItem(){ Icon="home_work", Path="gudang", Text="Gudang" },
                    new MenuItem(){ Icon="supervised_user_circle", Path="supplier", Text="Suplier" },
                    new MenuItem(){ Icon="group", Path="karyawan", Text="Karyawan" },
                }
            },

        new MenuItem(){ Icon="emoji_people", Text="Pelanggan" , Children =
                new List<MenuItem>{
                    new MenuItem(){ Icon="emoji_people", Path="customer", Text="Data Pelanggan" },
                    new MenuItem(){ Icon="map", Path="customermap", Text="Map Pelanggan" },
                }
            },

        new MenuItem(){ Icon="inventory", Text="Data Barang" , Path="product" },
        new MenuItem(){ Icon="shopping_cart", Text="Pembelian" , Children =
                new List<MenuItem>{
                    new MenuItem(){ Icon="draft_orders", Path="pembelian/order", Text="Order" },
                    new MenuItem(){ Icon="order_approve", Path="pembelian/realisasi", Text="Reaslisasi" },
                    new MenuItem(){ Icon="assignment_return", Path="pembelian/return", Text="Return" },
                }
        },
        new MenuItem(){ Icon="storefront", Text="Penjualan" , Children =
                new List<MenuItem>{
                    new MenuItem(){ Icon="draft_orders", Path="penjualan/order", Text="Order" },
                    new MenuItem(){ Icon="order_approve", Path="penjualan/realisasi", Text="Reaslisasi" },
                    new MenuItem(){ Icon="assignment_return", Path="penjualan/pengembalian", Text="Return" },
                }
        },

         new MenuItem(){ Icon="trolley", Text="Pemindahan", Path="pemindahan" },
        new MenuItem(){ Icon="save", Text="Laporan" , Children =
                new List<MenuItem>{
                    new MenuItem(){ Icon="inventory_2", Path="data/stock", Text="Stock" },
                    new MenuItem(){ Icon="shopping_cart", Path="data/penjualan", Text="Penjualan" },
                    new MenuItem(){ Icon="payments", Path="data/piutang", Text="Piutang" },
                    new MenuItem(){ Icon="request_quote", Path="data/utang", Text="Utang" },
                    new MenuItem(){ Icon="deployed_code_account", Path="data/feesalesman", Text="Fee Salesman" },
                    new MenuItem(){ Icon="summarize", Path="data/summary", Text="Sumarry" },
                }
            },
       // new MenuItem(){ Icon="receipt_log", Text="Incomming Check" , Path="incomming" },
        new MenuItem(){ Icon="logout", Text="Logout" , Path="logout"  },
    };
    }


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ToggleWidth()
    {
        collapseNavMenu = !collapseNavMenu;
        IsWidth = !IsWidth;
        OnChange.InvokeAsync(1);
    }


    private string GetMenuClass()
    {
        if (collapseNavMenu && IsWidth)
            return "collapse";

        if (collapseNavMenu && !IsWidth)
            return "collapse-half";

        return null;
    }


    class MenuItem
    {
        public string Text { get; set; }
        public string Icon { get; set; }
        public string Path { get; set; }

        public List<MenuItem> Children { get; set; }
    }


}





