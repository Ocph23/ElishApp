@page "/incomming"

@using ShareModels.ModelViews

@inject IIncommingService service;

<h3>Incoming View</h3>

<Radzen.Blazor.RadzenFieldset Text="Info Pembelian">
    <div style="padding :10px">
        <RadzenDropDown AllowClear="true" AllowFiltering="true" Style="margin:-13px"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        Data=@service.Pembelians @bind-Value=@service.PembelianSelected
                        TextProperty="Nomor" />
        <RadzenButton Style="margin:0px ; margin-left:20px; text-align:end" Icon="save" Visible=@(service.Datas.Any()) Click="@(async ()=>await service.Save())"></RadzenButton>
    </div>
</Radzen.Blazor.RadzenFieldset>

    @if (service.PembelianSelected != null)
    {
        <Radzen.Blazor.RadzenFieldset Text="Data">
            <RadzenDataGrid Data="service.Datas" FilterCaseSensitivity=" FilterCaseSensitivity.CaseInsensitive" AllowSorting="true">
                <Columns>
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Article" Property="Product.CodeArticle" Width="150px" />
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Code Product" Property="Product.CodeName" Width="180px" />
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Name" Property="Product.Name" />
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Buy" Width="150px">
                        <Template Context="data">
                            @($"{data.Amount} {data.Unit.Name}")
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Real" Width="100px">
                        <Template Context="data">
                            <RadzenNumeric @bind-Value="data.ActualValue" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="IncomingItem" Title="Status" Property="Status" Width="150px" />
                </Columns>
            </RadzenDataGrid>
        </Radzen.Blazor.RadzenFieldset>
    }


    @code {

        protected override Task OnInitializedAsync()
        {

            service.Datas.CollectionChanged += onChangeDataCollection;

            service.LoadPembelian();
            return Task.CompletedTask;
        }



        private void onChangeDataCollection(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            foreach (var item in service.Datas)
            {
                item.UpdateEvent += UpdateData;
            }
        }


        public async Task UpdateData(IncomingItem data)
        {
            await InvokeAsync(() => this.StateHasChanged());
        }








    }



