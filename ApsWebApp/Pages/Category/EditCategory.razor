@page "/editcategory/{model}"



@inject ICategoryService categoryService;
@inject NotificationService NotificationService;
@inject Radzen.DialogService dialogService;

<RadzenFieldset Text="Kategori">
    <RadzenTemplateForm Data="model" TItem="Category" Submit="SaveAction">
        <RadzenFormField Text="Nama" class="rz-my-1 rz-w-100">
            <RadzenTextBox @bind-Value="@model.Name" Name="Name" />
            <RadzenRequiredValidator Component="Name" Text="Name is required" Popup=true />
        </RadzenFormField>
        <RadzenFormField Text="Keterangan " class="rz-my-1 rz-w-100">
            <RadzenTextBox @bind-Value="@model.Description" Name="Description" />
            <RadzenRequiredValidator Component="Description" Text="Description is required" Popup=true />
        </RadzenFormField>
        <div class="row">
            <div class="col-md-12 justify-content-end gap-2" style="width:100%; margin-top:20px; display:flex; gap:2px">
                <Radzen.Blazor.RadzenButton Icon="undo" Text="Batal" ButtonType="ButtonType.Button" Click="@(()=>Close())" ButtonStyle="ButtonStyle.Info" />
                <Radzen.Blazor.RadzenButton Icon="save" Text="Simpan" ButtonType="ButtonType.Submit"
                                            ButtonStyle="ButtonStyle.Warning" />
            </div>
        </div>
    </RadzenTemplateForm>

</RadzenFieldset>






@code {

    [Parameter]
    public Category model { get; set; }


    protected override Task OnInitializedAsync()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }



    public void Close()
    {
        dialogService.Close();
    }



    public async Task SaveAction(Category data)
    {
        try
        {
            var saved = false;
            if (data.Id > 0)
            {
                saved = await categoryService.Update(data.Id, data);
                dialogService.Close();
            }
            else
            {
                var result = await categoryService.Post(data);
                if (result != null)
                {
                    saved = true;
                    dialogService.Close(data);
                }
            }

            if (!saved)
                throw new SystemException("Data Not Saved");

            NotificationService.Notify(new NotificationMessage
                {
                    Detail = "Data Saved !",
                    Duration = 3000,
                    Severity = NotificationSeverity.Success,
                    Summary = "Success"

                });


        }
        catch (Exception ex)
        {

            NotificationService.Notify(new NotificationMessage
                {
                    Detail = ex.Message,
                    Duration = 3000,
                    Severity = NotificationSeverity.Error,
                    Summary = "Error"

                });
        }
    }
}
