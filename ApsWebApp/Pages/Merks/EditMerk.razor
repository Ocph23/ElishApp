@page "/editmerk/{model}"


@inject IMerkService merkService;
@inject NotificationService NotificationService;
@inject Radzen.DialogService dialogService;

<div class="row">
    <div class="col-md-12">
        <RadzenFieldset Text="Merek">
            <RadzenFormField Text="Nama" class="rz-my-1 rz-w-100">
                <RadzenTextBox @bind-Value="@model.Name" />
            </RadzenFormField>
            <RadzenFormField Text="Keterangan" class="rz-my-1 rz-w-100">
                <RadzenTextBox @bind-Value="@model.Description" />
            </RadzenFormField>

        </RadzenFieldset>
    </div>
</div>
<div class="row">
    <div class="col-md-12 justify-content-end rz-mt-2 gap-2" >
        <Radzen.Blazor.RadzenButton Icon="undo" Text="Batal" ButtonType="ButtonType.Button" Click="@(()=>Close())" ButtonStyle="ButtonStyle.Info" />
        <Radzen.Blazor.RadzenButton Icon="save" Text="Simpan" ButtonType="ButtonType.Button"
                                    Click="@(async (args) => await SaveAction())" ButtonStyle="ButtonStyle.Warning" />
    </div>
</div>


@code {

    [Parameter]
    public Merk model { get; set; }


    protected override Task OnInitializedAsync()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }



    public void Close()
    {
        dialogService.Close();
    }



    public async Task SaveAction()
    {
        try
        {
            var saved = false;
            if (model.Id > 0)
            {
                saved = await merkService.Update(model.Id, model);
                dialogService.Close();
            }
            else
            {
                var result = await merkService.Post(model);
                if (result != null)
                {
                    saved = true;
                    dialogService.Close(model);
                }
            }

            if (!saved)
                throw new SystemException("Data Not Saved");

            NotificationService.Notify(new NotificationMessage
            {
                Detail = "Data Saved !",
                Duration = 3000,
                Severity = NotificationSeverity.Success,
                Summary = "Success"

            });


        }
        catch (Exception ex)
        {

            NotificationService.Notify(new NotificationMessage {
                Detail=ex.Message, Duration=3000, Severity= NotificationSeverity.Error,  Summary="Error"

            });
        }
    }
}
