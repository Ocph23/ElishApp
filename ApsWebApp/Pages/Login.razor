@using ShareModels

@inject IUserStateService userService
@inject NavigationManager NavigationManager
@inject NotificationService notif;

@layout AuthLayout


@page "/login"

    <div class="col-md-12" style="height:80%; margin-top:20%">
            <RadzenTemplateForm Data="user" TItem="UserLogin" Submit=@(async (x)=>await LoginAction(x)) OnInvalidSubmit=@OnInvalidSubmit >
        <Radzen.Blazor.RadzenFieldset Style="width:500px; margin:auto" Text="LOGIN">
                <div class="col-md-12">
                    <div class="row" style="margin-top:10px">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="User Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="user.UserName" Name="Name" />
                            <RadzenRequiredValidator Component="Name" Text="User Name is required" Popup=true Style="position: absolute" />
                        </div>
                    </div>

                    <div class="row" style="margin-top:10px">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Password" />
                        </div>
                        <div class="col-md-8">
                            <RadzenPassword @bind-Value="user.Password" Name="Password" />
                            <RadzenRequiredValidator  Component="Password" Text="Password is required" Popup=true Style="position: absolute" />
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px">
                        <div class="col-md-4 align-items-center d-flex">
                        </div>
                        <div class="col-md-8">
                            <div class="col-md-8">
                                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                                <label class="form-check-label" for="exampleCheck1">Check me out</label>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px">
                        <div class="col-md-4 align-items-center d-flex">
                        </div>
                        <div class="col-md-8">
                            <RadzenButton ButtonType="ButtonType.Submit" class="btn btn-primary">Login</RadzenButton>
                        </div>
                    </div>
                </div>

            @if (message != null)
            {
                <div class="alert alert-danger" role="alert">
                    @message
                </div>
            }
        </Radzen.Blazor.RadzenFieldset>
            </RadzenTemplateForm>
    </div>

   


    @code {
        private UserLogin user = new UserLogin();

        private string message;


        protected override async Task OnInitializedAsync()
        {
            await Task.Delay(1000);
        }

        async Task LoginAction(UserLogin obj)
        {
            try
            {

                

                var result = await userService.Login(user);

                if (result)
                {
                    NavigationManager.NavigateTo("");
                }
            }
            catch (Exception ex)
            {
                notif.Notify(new NotificationMessage { Detail = ex.Message, Duration = 3000, Severity= NotificationSeverity.Error,  Summary="Error Account" });
            }
        }


        private async Task HideMessage()
        {
            await Task.Delay(3000);
            message = null;
        }

        void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
        {
            //  console.Log($"InvalidSubmit: {JsonSerializer.Serialize(args, new JsonSerializerOptions() { WriteIndented = true })}");
        }

    }
