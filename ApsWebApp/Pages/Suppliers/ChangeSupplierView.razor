@page "/supplier/change/{id?}"

@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager nav;
@inject ISupplierService supplierService;
@inject NotificationService NotificationService;



<h3>@title</h3>

<RadzenFieldset Text="">
    <EditForm Model="@model" OnValidSubmit="@Save">
        <div class="form-row">
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputEmail4">Supplier Name</label>
                <input type="text" @bind="model.Nama" class="form-control" id="name">
            </div>
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputPassword4">NPWP</label>
                <input type="text" @bind="model.NPWP" class="form-control" id="npwp">
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputEmail4">Email</label>
                <input type="email" @bind="model.Email" class="form-control" id="email">
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputEmail4">Contact Person Name</label>
                <input type="text" @bind="model.ContactPersonName" class="form-control" id="personName">
            </div>
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputPassword4">Contact Person Telepon</label>
                <input type="text" @bind="model.ContactPerson" class="form-control" id="personTelp">
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputAddress">Address</label>
                <input type="text" class="form-control" @bind="model.Address" id="inputAddress" placeholder="Jln.">
            </div>
            <div class="form-group col-md-6" style="margin-bottom:16px">
                <label for="inputAddress2">Telepon</label>
                <input type="text" class="form-control" @bind="model.Telepon" id="inputAddress2" placeholder="Telepon">
            </div>
            <div class="form-row col-md-6 d-flex justify-content-end gap-2">
                <Radzen.Blazor.RadzenButton Icon="undo" Text="Kembali" ButtonType="ButtonType.Button" Click="@(()=>GoBack())" ButtonStyle="ButtonStyle.Info" />
                <Radzen.Blazor.RadzenButton Icon="save" Text="Simpan" ButtonType="ButtonType.Submit"
                                            ButtonStyle="ButtonStyle.Warning" />
            </div>
        </div>
    </EditForm>
</RadzenFieldset>



@code {
    [Parameter]
    public string id { get; set; }

    public string title = "Tambah Supplier";

    public Supplier model { get; set; } = new Supplier();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(id))
            {
                model = new Supplier();
            }
            else
            {
                title = "Edit Supplier";
                model = await supplierService.GetSupplier(Convert.ToInt32(id));
            }
        }
        catch
        {
            //ex.Message;
        }
    }


    private async Task Save()
    {
        try
        {
            var Id = Convert.ToInt32(id);
            if (Id <= 0)
            {
                var data = await supplierService.Post(model);
                if (data != null)
                {
                    nav.NavigateTo("/supplier");
                }
            }
            else
            {
                var updated = await supplierService.Update(Convert.ToInt32(id), model);
                if (updated)
                {
                    nav.NavigateTo("/supplier");
                }
            }


        }
        catch(Exception ex)
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Detail = ex.Message,
                    Duration = 3000,
                    Severity = NotificationSeverity.Error,
                    Summary = "Error"

                });
        }


    }


    private void GoBack()
    {
        nav.NavigateTo("/supplier");
    }



}
