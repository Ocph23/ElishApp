@page "/supplier"

@attribute [Authorize]
@inject NavigationManager nav;
@inject ISupplierService supplierService;

<Radzen.Blazor.RadzenFieldset>
    <HeaderTemplate>Data Supplier</HeaderTemplate>
    <ChildContent>
        <RadzenButton Icon="add" Style="margin-bottom: 5px;" ButtonStyle="ButtonStyle.Success" Click="@(()=> nav.NavigateTo($"/supplier/change"))" />
        <RadzenDataGrid Data="suppliers" AllowFiltering="true" AllowPaging="true" AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="Supplier" Title="Name" Property="Nama" />
                <RadzenDataGridColumn TItem="Supplier" Title="Contact Person" Property="ContactPersonName" Width="250px" />
                <RadzenDataGridColumn TItem="Supplier" Title="Telepon" Property="Telepon" Width="350px" />
                <RadzenDataGridColumn TItem="Supplier" Context="item" Width="100px">
                    <Template>
                        <RadzenButton Icon="info" ButtonStyle="ButtonStyle.Warning" Click="@(()=> nav.NavigateTo($"/supplier/change/{item.Id}"))"></RadzenButton>
                        <RadzenButton Icon="list" ButtonStyle="ButtonStyle.Info" Click="@(()=> nav.NavigateTo($"/product/{item.Id}"))"></RadzenButton>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </ChildContent>
</Radzen.Blazor.RadzenFieldset>

       



        @code {
            private IEnumerable<Supplier> suppliers;

            protected override async Task OnInitializedAsync()
            {
                try
                {
                    suppliers = await supplierService.GetSuppliers();
                }
                catch (Exception)
                {


                }


            }


            private void AddAction()
            {
                nav.NavigateTo("/supplier/change/1");
            }

        }
