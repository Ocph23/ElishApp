@page "/notapenjualan/{id?}"

@using FastReport;
@using FastReport.Web;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Html;

@inject IPenjualanService _penjualanService;
@inject IWebHostEnvironment iwebhost;

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>FastReport Prepared Report Preview</title>
</head>
<body>
    @if (webReport != null)
    {
        webReport.Render();
    }


</body>
</html>

@code {

    [Parameter]
    public string Id { get; set; }
    private WebReport webReport = new WebReport();
    private HtmlString HTMLBody = new HtmlString("");
    protected override Task OnInitializedAsync()
    {
        webReport = new WebReport();
        webReport.ToolbarColor = System.Drawing.Color.White;
        webReport.ShowZoomButton = false;
        webReport.ShowExports = false;

        int id = Convert.ToInt32(Id);

        var data = _penjualanService.GetOrder(id).Result;
        var nota = new ShareModels.Reports.NotaPenjualan
        {
            CreateDate = data.OrderDate,
            Customer = data.Customer.Name,
            Discount = data.Discount,
            OrderStatus = data.Status.ToString(),
            PoNumber = data.Nomor,
            Sales = data.Sales.Name,
        };

        var datas = new List<ShareModels.Reports.NotaData>();
        int nomor = 1;
        foreach (var item in data.Items)
        {
            datas.Add(new ShareModels.Reports.NotaData
            {
                No = nomor,
                Amount = item.Amount,
                CodeArticle = item.Product.CodeArticle,
                CodeProduct = item.Product.CodeName,
                ProductName = $"{item.Product.Name} {item.Product.Size}",
                Unit = item.Unit.Name,
                Price = item.Price,
                Total = item.Total,

            });

            nomor++;
        }

        var report = new WebReport();
        webReport.Report.Load($"{iwebhost.WebRootPath}/reports/nota1.frx");
        var datasets = datas.ToDataTable();
        webReport.Report.RegisterData(datasets, "Table1");

        return base.OnInitializedAsync();
    }
}
