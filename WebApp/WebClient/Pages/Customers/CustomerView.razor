@page "/customer"

@using System;
@using ShareModels;
@using WebClient.Services;

@inject NavigationManager nav;
@inject ICustomerService customerService;

@attribute [Authorize]

<h3>Data Customers</h3>
<Radzen.Blazor.RadzenButton Icon="add" ButtonType="ButtonType.Button" 
                            Click="@(()=>nav.NavigateTo($"/customer/change"))" ButtonStyle="ButtonStyle.Info" Style="margin:5px" />
<RadzenGrid Data="customers" AllowFiltering="true" AllowPaging="true" AllowSorting="true"  >
    <Columns>
        <RadzenGridColumn TItem="Customer" Title="Name" Property="Name" />
        <RadzenGridColumn TItem="Customer" Title="Contact Person" Property="ContactName" Width="250px" />
        <RadzenGridColumn TItem="Customer" Title="Telepon" Property="Telepon" Width="200px" />
        <RadzenGridColumn TItem="Customer" Title="Salesman" Width="200px" >
            <Template Context="item">
                @(item.Karyawan==null ? "None": item.Karyawan.Name);
            </Template>
        </RadzenGridColumn>

        <RadzenGridColumn TItem="Customer" Context="item" Width="65px">
            <Template>
                <RadzenButton Icon="info" ButtonStyle="ButtonStyle.Warning" Click="@(()=> nav.NavigateTo($"/customer/change/{item.Id}"))"></RadzenButton>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>


@code {
    private IEnumerable<Customer> customers;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customers = await customerService.Get();
            var a = customers.Where(x => x.KaryawanId == 0);
        }
        catch (Exception)
        {


        }
    }

}
