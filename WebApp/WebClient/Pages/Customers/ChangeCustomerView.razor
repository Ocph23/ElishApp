@page "/customer/change/{id?}"

@inject NavigationManager nav;
@inject ICustomerService customerService;
@inject IKaryawanService karyawanService;

@attribute [Authorize]

<Radzen.Blazor.RadzenFieldset >

    <FieldSetHeader Title="@title"/>
    <div class="row">
        <div class="col-xl-12">
            <RadzenTabs style="height: 750px">
                <Tabs>
                    <RadzenTabsItem Text="Data">
                        <RadzenTemplateForm Data="model" Submit="@(async(Customer arg)=>await Save(arg))">
                            <Radzen.Blazor.RadzenFieldset Text="Customer">
                                <div class="form-row">
                                    <div class="col-md-6">
                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Nama" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextBox @bind-Value="model.Name" Name="Name" />
                                                <RadzenRequiredValidator Component="Name" Text="Customer Name is required" Popup=true Style="width:90%;" />
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Email" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextBox @bind-Value="model.Email" Name="Email" />
                                                <RadzenRequiredValidator Component="Email" Text="Email is required" Popup=true Style="width:90%;" />
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Nama Kontak" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextBox @bind-Value="model.ContactName" Name="ContactName" />
                                                <RadzenRequiredValidator Component="ContactName" Text="Contact Name is required" Popup=true Style="width:90%;" />

                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Telepon" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextBox @bind-Value="model.Telepon" Name="Telepon" />
                                                <RadzenRequiredValidator Component="Telepon" Text="Telepon is required" Popup=true Style="width:90%;" />
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-6">

                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="NPWP" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextBox @bind-Value="model.NPWP" Style="width:90%;" />
                                            </div>
                                        </div>

                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Alamat"  />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenTextArea @bind-Value="model.Address" Name="Address" Style="width:90%;" />
                                                <RadzenRequiredValidator Component="Address" Text="Address is required" Popup=true  />
                                            </div>
                                        </div>

                                        <div class="row" style="margin-top:10px">
                                            <div class="col-md-4 align-items-center d-flex">
                                                <RadzenLabel Text="Seles" />
                                            </div>
                                            <div class="col-md-8">
                                                <RadzenDropDown AllowClear="true" AllowFiltering="true"
                                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                                Data=@salesmans @bind-Value=@model.Karyawan SelectedItemChanged="@((arg)=> SelectSalesman(arg))"
                                                                TextProperty="Name" Style="width:90%;" />
                                            </div>
                                        </div>
                                      
                                    </div>
                                </div>
                                <hr />
                                <div class="row text-center" style="margin:10px">

                                    <Radzen.Blazor.RadzenButton Icon="undo" ButtonType="ButtonType.Button" Click="@(()=>GoBack())" ButtonStyle="ButtonStyle.Info" Style="margin:5px" />
                                    <Radzen.Blazor.RadzenButton Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Warning" Style="margin:5px" />
                                </div>

                            </Radzen.Blazor.RadzenFieldset>
                        </RadzenTemplateForm>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Orders">

                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Pembelian">

                    </RadzenTabsItem>

                </Tabs>
            </RadzenTabs>
        </div>

    </div>

</Radzen.Blazor.RadzenFieldset>

@code {
    [Parameter]
    public string id { get; set; }

    public string title = "Pelanggan Baru";

    public Customer model { get; set; } = new Customer();
    public IEnumerable<Karyawan> salesmans = new List<Karyawan>();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            salesmans = await karyawanService.Get();
            if (string.IsNullOrEmpty(id))
            {
                model = new Customer();
            }
            else
            {
                title = "Edit Pelanggan";
                model = await customerService.Get(Convert.ToInt32(id));
            }
        }
        catch
        {
            //ex.Message;
        }
    }


    void SelectSalesman(object arg)
    {
        var kar = (Karyawan)arg;
        if (kar != null)
            model.Karyawan = kar;
    }

    private async Task Save(Customer cust)
    {
        try
        {
            var Id = Convert.ToInt32(id);
            if (Id <= 0)
            {
                var data = await customerService.Post(model);
                if (data != null)
                {
                    nav.NavigateTo("/customer");
                }
            }
            else
            {
                var updated = await customerService.Update(Convert.ToInt32(id), model);
                if (updated)
                {
                    @*existOnModel.Address = value.Address;
                    existOnModel.ContactName = value.ContactName;
                    existOnModel.Email = value.Email;
                    existOnModel.Name = value.Name;
                    existOnModel.NPWP = value.NPWP;
                    existOnModel.Telepon = value.Telepon;
                    existOnModel.UserId = value.UserId;*@
                    nav.NavigateTo("/customer");
                }
            }
        }
        catch
        {
            //ex.Message;
        }


    }


    private void GoBack()
    {
        nav.NavigateTo("/customer");
    }



}
