@page "/supplier/products/{id?}";

@inject NavigationManager nav;
@inject ISupplierService supplierService;
@using Microsoft.AspNetCore.Authorization
@inject IProductService productService;
@attribute [Authorize]



<h3>Data Product</h3>

<Radzen.Blazor.RadzenButton Icon="add"  ButtonType="ButtonType.Button"  
     Style="margin-bottom:10px" Click="@(()=>nav.NavigateTo($"/supplier/addproduct/{id}"))" ButtonStyle="ButtonStyle.Success" />


<RadzenGrid @ref="grid" Data="@(products)" AllowFiltering="true"
            AllowPaging="true" AllowSorting="true" TItem="Product" >
    <Columns>

        <RadzenGridColumn TItem="Product" Width="125px" Property="Category.Name" Title="Categori">
           
        </RadzenGridColumn>

        <RadzenGridColumn TItem="Product" Property="Name" Title="Product Name">
        
        </RadzenGridColumn>

        <RadzenGridColumn TItem="Product" Width="150px" Property="CodeName" Title="Code Name">
       
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Product" Width="150px" Property="CodeArticle" Title="CodeA rticle">
           
        </RadzenGridColumn>

        <RadzenGridColumn TItem="Product" Width="150px" Property="Merk" Title="Merk">
           
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Product" Width="80px" Property="Size" Title="Size">
           
        </RadzenGridColumn>

        <RadzenGridColumn TItem="Product"  Context="sampleBlazorModelsSampleOrder"
                          Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="65px">
            <Template Context="item">
                <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(()=>nav.NavigateTo($"/supplier/product/{id}/{item.Id}"))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>

    </Columns>
</RadzenGrid>


@code{
    [Parameter]
    public string id { get; set; }
    private IEnumerable<Product> products;

    RadzenGrid<Product> grid;

    protected override async Task OnInitializedAsync()
    {
        int Id = Convert.ToInt32(id);
        if (Id > 0)
        {
            products = await productService.GetProductsBySupplier(Id);
        }
    }

}
